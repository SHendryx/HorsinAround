<%
  // Using the lastVisit date from the database, calculate the time since the last visit
  // Set a color gradient based on the following criteria:
  // lastVisit < 6 weeks (42 days) = green
  // 6 weeks (42 days) < lastVisit < 8 weeks (56 days) = yellow
  // lastVisit >= 8 weeks (56 days) = red

  getHex = function(days, rangeStart, rangeEnd, endValue){
    let normalizedDays = ((days - rangeStart)/(rangeEnd - rangeStart))
    if (endValue == 1){
      // Puts the normalizedDays on the scale from 0-255 in hex
      normalizedDays *= 255
    } else{
      // Puts the normalizedDays on the scale from 255-0 in hex
      normalizedDays = (1 - normalizedDays) * 255
    }
    // Returns the normalizedDays in hex
    normalizedDays = Math.floor(normalizedDays)
    let hexString = normalizedDays.toString(16)
    if (hexString.length < 2){
      hexString = '0' + hexString
    }
    return hexString
  }

  getNormalized = function(days, rangeStart, rangeEnd, endValue){
    let normalizedDays = ((days - rangeStart)/(rangeEnd - rangeStart))
    console.log("======================")
    console.log("Days Since Last Visit: " + days)
    console.log("Range Start: " + rangeStart)
    console.log("Range End: " + rangeEnd)
    console.log("End Value: " + endValue)
    console.log("Normalized Days: " + normalizedDays)
    if (endValue == 1){
      // Puts the normalizedDays on the scale from 0-255 in hex
      normalizedDays *= 255
    } else{
      // Puts the normalizedDays on the scale from 255-0 in hex
      normalizedDays = (1.0 - normalizedDays) * 255
    }
    normalizedDays = Math.floor(normalizedDays)
    return normalizedDays
  }

  const date = typeof horse.lastVisit === 'undefined' ? new Date() : horse.lastVisit
  // Get the time (in milliseconds) from the last visit to now
  const timeSinceLastVisit = new Date() - date
  // There are 86,400,000 milliseconds in a day
  const daysSinceLastVisit = Math.floor(timeSinceLastVisit / 86400000)

  console.clear()

  let warnDays = 42
  let alertDays = 56
  let borderColor
  let redVal
  let greenVal
  let blueVal
  if (daysSinceLastVisit < warnDays) {
    // 0 days since visit is the low-limit
    // warnDays days since visit is the high-limit
    // For Green->Yellow gradient we want a hex value from 0-255 (low-high) returned
    // Setting endValue to 1 causes getHex to normalize up from 0 to 255
    let endValue = 1
    let hexValue = getHex(daysSinceLastVisit, 0, warnDays, endValue)
    borderColor = '#' + hexValue + 'ff00'
    redVal = getNormalized(daysSinceLastVisit, 0, warnDays, endValue)
    console.log(redVal)
    greenVal = 255
    blueVal = 0
  } else if (daysSinceLastVisit < alertDays) {
    // warnDays days since visit is the low-limit
    // alertDays days since visit is the high-limit
    // For Yellow->Red gradient we want a hex value from 255-0 (low-high) returned
    // Setting endValue to 0 causes getHex to normalize down from 255 to 0
    let endValue = 0
    let hexValue = getHex(daysSinceLastVisit, warnDays, alertDays, endValue)
    borderColor = '#ff' + hexValue + '00'
    redVal = 255
    greenVal = getNormalized(daysSinceLastVisit, warnDays, alertDays, endValue)
    console.log(greenVal)
    blueVal = 0
  } else {
    borderColor = '#ff0000'
    redVal = 255
    greenVal = 0
    blueVal = 0
  }
%>

<tr style="background: rgba(<%= redVal %>,<%= greenVal %>,<%= blueVal %>, .80);">
  <td><%= horse.name %></td>
  <td>
    <address><%= horse.location %></address>
  </td>
  <td>
    <!--<div style="border: 3px solid <%= borderColor %>;border-radius: 5px;">-->
      <%= `${date.getUTCMonth() + 1}/${date.getUTCDate()}/${date.getUTCFullYear()}` %>
    <!--</div>-->
  </td>
</tr>

